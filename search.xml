<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux 命令汇总</title>
      <link href="/archives/5167e262/"/>
      <url>/archives/5167e262/</url>
      
        <content type="html"><![CDATA[<blockquote><p>这篇文章用来记录一些常用的、或者我在学习和工作中用到的 Linux 命令，仅供参考。</p></blockquote><p>在 Linux 中，每个命令都有很多选项和参数（参数组合使用时，大部分命令都没有要求固定的参数顺序，但有少部分命令会有特定的参数顺序），可以使用 <code>man [options] command</code> 命令来查看详细文档。</p><h1 id="自动完成"><a href="#自动完成" class="headerlink" title="自动完成"></a>自动完成</h1><p>自动完成是一个方便的命令行功能，可以通过按下 Tab 键来自动补全命令、文件名、目录名等。在大多数现代的命令行终端中，自动完成功能是默认启用的。这里简单介绍一些常用的自动完成：</p><ul><li><p>文件和目录名自动完成：输入部分文件或目录名后，按下 Tab 键，系统将自动完成剩余部分。如果有多个匹配项，按下 Tab 两次将显示所有匹配项。</p></li><li><p>命令名自动完成：输入命令的前几个字母，然后按下 Tab 键。系统将尝试自动完成命令名。</p></li><li><p>参数和选项自动完成：在输入命令时，按下 Tab 键可以自动完成命令的参数和选项。系统会列出所有可能的选项。</p></li><li><p>路径自动完成：在输入文件或目录路径时，可以使用 Tab 键来自动完成路径。这对于长路径特别有用。</p></li><li><p>通配符自动完成：在使用通配符（例如 <code>*</code>）时，按下 Tab 键可以展开匹配的文件或目录名。</p></li><li><p>查看可用的自动完成项：按下两次 Tab 键，系统会显示所有可能的匹配项。这对于查看可用的命令和文件名非常有用。</p></li><li><p>手动配置自动完成：某些系统和终端允许用户手动配置自动完成行为。例如，bash shell 使用 <code>.bashrc</code> 或 <code>.bash_profile</code> 文件来配置自动完成。</p></li></ul><h1 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h1><p>通过 <code>|</code> 符号，可以将一个命令的输出作为另一个命令的输入，这被称为管道（pipeline）。这里简单介绍一下如何使用 <code>|</code> 将数据传递给 <code>grep</code> 进行筛选。以下是一些示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基本用法，command1 生成的输出会成为 grep 的输入</span></span><br><span class="line">command1 | grep <span class="string">&quot;pattern&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列出当前目录下的文件和目录，通过 grep 筛选出包含 txt 的文件或目录</span></span><br><span class="line"><span class="built_in">ls</span> -l | grep <span class="string">&quot;txt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 组合多个命令</span></span><br><span class="line">command1 | command2 | grep <span class="string">&quot;pattern&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将文件内容进行排序和去重，通过 grep 筛选包含指定模式的行</span></span><br><span class="line"><span class="built_in">cat</span> file.txt | <span class="built_in">sort</span> | <span class="built_in">uniq</span> | grep <span class="string">&quot;pattern&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 实时监控日志文件，只查看包含 error 的行</span></span><br><span class="line"><span class="built_in">tail</span> -f /var/log/syslog | grep <span class="string">&quot;error&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计文件行数</span></span><br><span class="line"><span class="built_in">cat</span> file.txt | grep <span class="string">&quot;pattern&quot;</span> | <span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure><h1 id="文件和目录操作"><a href="#文件和目录操作" class="headerlink" title="文件和目录操作"></a>文件和目录操作</h1><h2 id="ls：列出目录内容"><a href="#ls：列出目录内容" class="headerlink" title="ls：列出目录内容"></a><code>ls</code>：列出目录内容</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">ls</span> [options] [file_or_directory]</span><br></pre></td></tr></table></figure><ul><li><p><code>options</code>：可选参数，用于控制 <code>ls</code> 命令的行为。</p></li><li><p><code>directory</code>：要列出内容的目录。如果未指定目录，则默认为当前工作目录。</p></li></ul><p><strong>常用参数</strong>：</p><ul><li><p><code>-l</code>：以列表的格式显示内容，包括文件和目录的详细信息，如权限、所有者、大小、修改时间等。</p></li><li><p><code>-a</code>：显示所有文件和目录，包括以 <code>.</code> 开头的隐藏文件，也包括当前目录（<code>.</code>）和上级目录（<code>..</code>）。</p></li><li><p><code>-h</code>：以人类可读的格式显示文件和目录的大小，如 KB、MB 等。</p></li><li><p><code>-r</code>：反向排序，按照字母顺序的相反顺序列出文件和目录。</p></li><li><p><code>-t</code>：按照修改时间排序，最新的文件在前面。</p></li><li><p><code>-R</code>：递归列出子目录的内容。</p></li><li><p><code>--color=auto</code>：根据文件类型以不同颜色显示文件。</p></li><li><p><code>--file-type</code>：在文件名后面显示文件类型。</p></li><li><p><code>-d</code>：显示目录本身，而不是目录下的内容。</p></li></ul><h2 id="cd：切换目录"><a href="#cd：切换目录" class="headerlink" title="cd：切换目录"></a><code>cd</code>：切换目录</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> [options] [directory]</span><br></pre></td></tr></table></figure><ul><li><code>directory</code>：要切换到的目标目录的路径。如果省略目录参数，则切换到用户的主目录（通常是 <code>/home/username</code>）。</li></ul><p><strong>常用参数</strong>：</p><ul><li><p><code>-P</code>：强制使用物理路径，而不是符号链接路径。</p></li><li><p><code>-L</code>：如果目标是一个符号链接，直接从当前目录切换到符号链接指向的目录。</p></li><li><p><code>--</code>：表示接下来的参数都是目录名，即使以 <code>-</code> 开头。</p></li></ul><p><strong>特殊目录符号</strong>：</p><ul><li><p><code>.</code>：表示当前目录。例如，<code>cd .</code> 不会切换目录。</p></li><li><p><code>..</code>：表示上级目录。例如，<code>cd ..</code> 会从当前目录切换到上级目录。</p></li><li><p><code>-</code>：表示上一个工作目录。例如，<code>cd -</code> 会从当前目录切换到上一次所在目录。</p></li></ul><p><strong>绝对路径和相对路径</strong>：</p><ul><li><p>绝对路径：指定目录的完整路径，以根目录（<code>/</code>）为起点。例如，<code>cd /var/lib</code>。</p></li><li><p>相对路径：相对于当前目录的路径，一般会配合当前目录（<code>.</code>）和上级目录（<code>..</code>）使用。例如，<code>cd usr</code> 表示切换到当前目录下的 usr 目录；<code>cd ./usr</code> 与前一个例子相同，表示切换到当前目录下的 usr 目录；<code>cd ../usr</code> 表示切换到上级目录下，与当前目录同级的 usr 目录。</p></li></ul><h2 id="pwd：显示当前工作目录的路径"><a href="#pwd：显示当前工作目录的路径" class="headerlink" title="pwd：显示当前工作目录的路径"></a><code>pwd</code>：显示当前工作目录的路径</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">pwd</span></span><br></pre></td></tr></table></figure><p><strong>常用参数</strong>：</p><ul><li><p><code>-L</code>：如果当前工作目录是符号链接，显示符号链接的路径而不是实际路径。</p></li><li><p><code>-P</code>：显示物理路径，即不进行符号链接解析。</p></li></ul><p><strong>在脚本中使用</strong>：</p><ul><li><p>在脚本中获取当前脚本所在的目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">script_dir=$(<span class="built_in">dirname</span> <span class="string">&quot;<span class="subst">$(readlink -f <span class="string">&quot;<span class="variable">$0</span>&quot;</span>)</span>&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>在 Shell 脚本中获取当前工作目录：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">current_dir=$(pwd)</span><br></pre></td></tr></table></figure></li></ul><h2 id="cp：复制文件或目录"><a href="#cp：复制文件或目录" class="headerlink" title="cp：复制文件或目录"></a><code>cp</code>：复制文件或目录</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> <span class="built_in">source</span> destination</span><br></pre></td></tr></table></figure><ul><li><p><code>source</code>：要复制的源文件或目录的路径。</p></li><li><p><code>destination</code>：目标路径，即文件或目录的目标位置。</p></li></ul><p><strong>常用参数</strong>：</p><ul><li><p><code>-r</code> 或 <code>-R</code>：递归复制，用于复制目录及其内容。</p></li><li><p><code>-i</code>：交互模式，在复制前询问是否覆盖已存在的文件。</p></li><li><p><code>-u</code>：仅复制更新过的文件，即目标文件比源文件旧才复制。</p></li><li><p><code>-a</code>：彻底复制，保留源文件的所有属性，适用于备份。</p></li><li><p><code>--backup[=CONTROL]</code>：在复制时创建备份文件。</p></li></ul><p><strong>常用操作</strong>：</p><ul><li><p>配合通配符使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> *.txt /path/to/destination/</span><br></pre></td></tr></table></figure></li><li><p>复制多个文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> file1.txt file2.txt /path/to/destination/</span><br></pre></td></tr></table></figure></li><li><p>使用变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SOURCE=<span class="string">&quot;/path/to/source/file.txt&quot;</span></span><br><span class="line">DEST=<span class="string">&quot;/path/to/destination/&quot;</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$SOURCE</span> <span class="variable">$DEST</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="mv：移动文件和目录，也可用于重命名"><a href="#mv：移动文件和目录，也可用于重命名" class="headerlink" title="mv：移动文件和目录，也可用于重命名"></a><code>mv</code>：移动文件和目录，也可用于重命名</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> <span class="built_in">source</span> destination</span><br></pre></td></tr></table></figure><ul><li><p><code>source</code>：要移动的源文件或目录的路径。</p></li><li><p><code>destination</code>：目标路径，即文件或目录的目标位置。</p></li></ul><p><strong>常用参数</strong>：</p><ul><li><p><code>-i</code>：交互模式，在移动前询问是否覆盖已存在的文件。</p></li><li><p><code>-u</code>：仅移动更新过的文件，即目标文件比源文件旧才移动。</p></li><li><p><code>-b</code>：在移动时，如果目标文件已存在，则创建备份。</p></li></ul><p><strong>常用操作</strong>：</p><ul><li><p>重命名文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> oldfile.txt newfile.txt</span><br></pre></td></tr></table></figure></li><li><p>移动多个文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> file1.txt file2.txt /path/to/destination/</span><br></pre></td></tr></table></figure></li><li><p>配合通配符使用：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mv</span> *.txt /path/to/destination/</span><br></pre></td></tr></table></figure></li><li><p>使用变量：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">SOURCE=<span class="string">&quot;/path/to/source/file.txt&quot;</span></span><br><span class="line">DEST=<span class="string">&quot;/path/to/destination/&quot;</span></span><br><span class="line"><span class="built_in">mv</span> <span class="variable">$SOURCE</span> <span class="variable">$DEST</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="rm：删除文件或目录"><a href="#rm：删除文件或目录" class="headerlink" title="rm：删除文件或目录"></a><code>rm</code>：删除文件或目录</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> file</span><br></pre></td></tr></table></figure><ul><li><code>file</code>：要删除的文件的路径。</li></ul><p><strong>常用参数</strong>：</p><ul><li><p><code>-r</code> 或 <code>-R</code>：递归删除，用于删除目录及其内容。在删除目录时必须加上 <code>-r</code> 或 <code>-R</code> 参数。</p></li><li><p><code>-f</code>：强制删除，不提示任何确认信息。</p></li><li><p><code>-i</code>：交互模式，在删除前询问确认。</p></li><li><p><code>--preserve-root</code>：防止删除根目录。</p></li></ul><p><strong>常用操作</strong>：</p><ul><li><p>强制删除指定目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> -rf ./directory/</span><br></pre></td></tr></table></figure></li><li><p>使用通配符删除多个文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">rm</span> *.txt</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>谨慎使用 <code>rm</code> 命令，尤其是添加 <code>-r</code> 和 <code>-f</code> 参数时！</p></blockquote><h2 id="mkdir：创建目录"><a href="#mkdir：创建目录" class="headerlink" title="mkdir：创建目录"></a><code>mkdir</code>：创建目录</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> directory_name</span><br></pre></td></tr></table></figure><ul><li><code>directory_name</code>：要创建的目录的名称。</li></ul><p><strong>常用参数</strong>：</p><ul><li><p><code>-p</code>：递归创建目录，如果上级目录不存在也会一并创建。</p></li><li><p><code>--mode=MODE</code> 或 <code>-m MODE</code>：设置目录的权限模式。</p></li></ul><p><strong>常用操作</strong>：</p><ul><li><p>创建目录并设置权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -m 755 new_directory</span><br></pre></td></tr></table></figure></li><li><p>创建多个目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> dir1 dir2 dir3</span><br></pre></td></tr></table></figure></li><li><p>创建带有层级关系的多个目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p dir1/dir2/dir3</span><br></pre></td></tr></table></figure></li><li><p>使用变量创建目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DIR_NAME=<span class="string">&quot;new_directory&quot;</span></span><br><span class="line"><span class="built_in">mkdir</span> <span class="variable">$DIR_NAME</span></span><br></pre></td></tr></table></figure></li><li><p>结合其他命令创建：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用当前时间作为目录名创建目录</span></span><br><span class="line"><span class="built_in">mkdir</span> $(<span class="built_in">date</span> +%Y-%m-%d)</span><br></pre></td></tr></table></figure></li></ul><h1 id="文件查看和编辑"><a href="#文件查看和编辑" class="headerlink" title="文件查看和编辑"></a>文件查看和编辑</h1><h2 id="cat：显示文件内容"><a href="#cat：显示文件内容" class="headerlink" title="cat：显示文件内容"></a><code>cat</code>：显示文件内容</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> [options] file1 [file2 ...]</span><br></pre></td></tr></table></figure><ul><li><code>file1</code>，<code>file2</code>，<code>...</code>：要连接并显示内容的文件。</li></ul><p><strong>常用参数</strong>：</p><ul><li><code>-n</code>：显示行号。</li></ul><p><strong>常用操作</strong>：</p><ul><li><p>连接并显示多个文件的内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> file1 file2</span><br></pre></td></tr></table></figure></li><li><p>将文件内容连接并保存到新文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> file1 file2 &gt; newfile</span><br></pre></td></tr></table></figure></li><li><p>将标准输入的内容连接并输出到文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; outputfile</span><br></pre></td></tr></table></figure></li><li><p>追加文件内容到另一文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> file1 &gt;&gt; file2</span><br></pre></td></tr></table></figure></li><li><p>将文件内容与标准输入连接并输出到文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> - file1 &gt; newfile</span><br></pre></td></tr></table></figure></li></ul><blockquote><p><code>cat</code> 通常用于查看小型文件的内容，如果要查看较大的文件如日志文件，最好使用下面介绍的 <code>more</code> 或者 <code>less</code> 命令。</p></blockquote><h2 id="more：逐页显示文件内容"><a href="#more：逐页显示文件内容" class="headerlink" title="more：逐页显示文件内容"></a><code>more</code>：逐页显示文件内容</h2><p><code>more</code> 命令可以逐页显示文件内容，只会把当前查看的一页内容加载到内存中，非常适合用来查看大文件。但只能不断向前翻页，无法向后翻页。</p><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">more [options] filename</span><br></pre></td></tr></table></figure><ul><li><code>filename</code>：要逐页显示的文件。</li></ul><p><strong>常用操作</strong>：</p><ul><li><p>翻页：按下空格键可以向前翻一页。</p></li><li><p>查看下一行：按下 Enter 键可以逐行向前翻动。</p></li><li><p>退出：按下 <code>q</code> 键可以退出 <code>more</code> 命令。</p></li><li><p>指定每页显示的行数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 指定每页显示 10 行</span></span><br><span class="line">more -n 10 filename</span><br></pre></td></tr></table></figure></li><li><p>显示行号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示每行的行号</span></span><br><span class="line">more -n filename</span><br></pre></td></tr></table></figure></li><li><p>搜索内容：按下 <code>/</code> 键，然后输入要搜索的文本，按 Enter 键开始搜索。按下 <code>n</code> 键可以查找下一个匹配项。</p></li></ul><h2 id="less：自由查看文件内容"><a href="#less：自由查看文件内容" class="headerlink" title="less：自由查看文件内容"></a><code>less</code>：自由查看文件内容</h2><p><code>less</code> 命令可以自由查看文件内容，与 <code>more</code> 命令一样，也是只加载当前页的内容到内存中，很适合用来查看大文件。但 <code>less</code> 命令可以向前&#x2F;向后翻页和搜索内容，非常灵活。</p><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less [options] filename</span><br></pre></td></tr></table></figure><ul><li><code>filename</code>：要查看的文件。</li></ul><p><strong>常用操作</strong>：</p><ul><li><p>翻页：使用空格键向前翻一页，使用 <code>b</code> 键向后翻一页。</p></li><li><p>上下滚动：可以使用箭头键向上和向下逐行滚动。</p></li><li><p>退出：按下 <code>q</code> 键可以退出 <code>less</code> 命令。</p></li><li><p>显示行号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">less -N filename</span><br></pre></td></tr></table></figure></li><li><p>指定行数查看：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 直接从第 10 行开始查看</span></span><br><span class="line">less +10 filename</span><br></pre></td></tr></table></figure></li><li><p>按列显示文本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按列显示文本，适合用来查看长行内容</span></span><br><span class="line">less -S filename</span><br></pre></td></tr></table></figure></li><li><p>搜索内容：</p><ul><li><p>正向搜索：按下 <code>/</code> 键，输入要搜索的文本，按 Enter 键开始搜索，使用 <code>n</code> 键向下查找下一个匹配项，使用 <code>N</code> 键向上查找前一个匹配项。</p></li><li><p>反向搜索：按下 <code>?</code> 键（即 <code>Shift + /</code>），输入要搜索的文件，按 Enter 键开始搜索，使用 <code>n</code> 键向上查找下一个匹配项，使用 <code>N</code> 键向下查找前一个匹配项。</p></li></ul></li></ul><h2 id="vi-vim：文本编辑器"><a href="#vi-vim：文本编辑器" class="headerlink" title="vi&#x2F;vim：文本编辑器"></a><code>vi</code>&#x2F;<code>vim</code>：文本编辑器</h2><h3 id="vi"><a href="#vi" class="headerlink" title="vi"></a><code>vi</code></h3><p><code>vi</code> 是一款强大的文本编辑器，常用于 Unix 和 Linux 操作系统。绝大多数 Unix 或 Linux 系统中默认安装的是 <code>vi</code>。</p><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi filename</span><br></pre></td></tr></table></figure><ul><li>打开名为 <code>filename</code> 的文件，如果文件不存在则创建。</li></ul><p><strong>常用操作</strong>：</p><ul><li><p>命令模式：通过 <code>vi</code> 命令打开文件后，进入到命令模式。进入其他模式后，可以按 ESC 键退出当前模式，回到命令模式。</p></li><li><p>编辑模式：在命令模式下，按下 <code>i</code> 键，进入插入模式，可以输入文本。</p></li><li><p>保存文件：在命令模式下，输入 <code>:w</code> 并按 Enter 键，保存文件。</p></li><li><p>保存并退出：在命令模式下，输入 <code>:wq</code> 或按下 <code>Shift + ZZ</code>，保存文件并退出。</p></li><li><p>强制退出（不保存）：在命令模式下，输入 <code>:q!</code>，强制退出而不保存修改。</p></li><li><p>复制和粘贴：在命令模式下，将光标移动到要复制的文本行，输入 <code>yy</code> 复制一行，然后将光标移动到要粘贴的位置，输入 <code>p</code> 粘贴。</p></li><li><p>剪切和粘贴：在命令模式下，将光标移动到要剪切的文本行，输入 <code>dd</code> 剪切一行，然后将光标移动到要粘贴的位置，输入 <code>p</code> 粘贴。</p></li><li><p>删除字符：在命令模式下，将光标移动到要删除的字符上，输入 <code>x</code> 删除当前字符。</p></li><li><p>撤销操作：在命令模式下，输入 <code>u</code> 撤销上一步操作。</p></li><li><p>移动光标：<code>h</code>、<code>j</code>、<code>k</code>、<code>l</code> 分别表示左、下、上、右。</p></li><li><p>搜索文本：在命令模式下，输入 <code>/</code>，然后输入要搜索的文本，按 Enter 键。与 <code>less</code> 一样，支持通过 <code>?</code> 键进行反向搜索。</p></li><li><p>替换文本：在命令模式下，输入 <code>:s/old/new/g</code> 替换文本。<code>old</code> 表示被替换的文本，<code>new</code> 表示替换之后的文本。</p></li></ul><h3 id="vim"><a href="#vim" class="headerlink" title="vim"></a><code>vim</code></h3><p><code>vim</code>（Vi Improved）是 <code>vi</code> 的增强版本，引入了许多新的功能和改进。基本操作和 <code>vi</code> 基本一致，下面介绍 <code>vim</code> 一些新功能和新特性：</p><ul><li><p>语法高亮：<code>vim</code> 支持丰富的语法高亮，根据文件类型自动显示不同颜色的文本，使代码更易读。语法高亮是 <code>vim</code> 的默认行为，可以通过在配置文件中进行设置，或者在命令模式下使用 <code>:syntax enable</code> 手动启用。</p></li><li><p>多级撤销和重做：<code>vim</code> 允许多级的撤销和重做，通过 <code>u</code> 键进行撤销，<code>Ctrl + r</code> 进行重做。</p></li><li><p>多窗口和分屏：<code>vim</code> 允许在一个终端中分割成多个窗口，支持水平（输入 <code>:sp</code>）和垂直（输入 <code>:vsp</code>）分屏。如果要切换窗口，可以按下 <code>Ctrl + w</code>，然后按 <code>h</code>（左）、<code>j</code>（下）、<code>k</code>（上）、<code>l</code>（右）进行切换。</p></li><li><p>代码折叠：<code>vim</code> 支持代码折叠，可以折叠和展开代码块，使得处理大型代码文件更加方便。可以在命令模式下输入 <code>zf</code> 进行手动折叠和 <code>zo</code> 进行手动展开。</p></li><li><p>内置帮助系统：<code>vim</code> 有强大的内置帮助系统，通过 <code>:help</code> 命令可以查阅详细的文档。</p></li><li><p>插件支持：<code>vim</code> 支持丰富的插件生态系统，可以通过插件来扩展编辑器的功能。</p></li><li><p>自动补全：<code>vim</code> 提供了自动补全功能，可以更快速地输入代码。要使用自动补全功能，可以在插入模式下按下 <code>Ctrl + n</code> 或 <code>Ctrl + P</code>。</p></li><li><p>富文本剪切板支持：<code>vim</code> 支持与系统剪切板的集成，可以复制和粘贴到系统剪切板。</p></li><li><p>可视块模式：<code>vim</code> 支持可视块模式，可以在垂直方向选择文本块。在命令模式下按 <code>Ctrl + v</code> 进入可视块模式。</p></li><li><p>外部命令支持：<code>vim</code> 允许在编辑器中执行外部命令，例如运行编译器、执行 shell 命令等。</p></li></ul><h2 id="head-tail：显示文件的开头或结尾部分"><a href="#head-tail：显示文件的开头或结尾部分" class="headerlink" title="head&#x2F;tail：显示文件的开头或结尾部分"></a><code>head</code>&#x2F;<code>tail</code>：显示文件的开头或结尾部分</h2><h3 id="head"><a href="#head" class="headerlink" title="head"></a><code>head</code></h3><p><code>head</code> 命令用于显示文件的开头部分。它通常用于查看文件的前几行，而不必显示整个文件的内容。它对于快速查看文件的开头部分很有用，特别是想要了解文件的结构或内容的起始部分时。</p><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">head</span> [options] filename</span><br></pre></td></tr></table></figure><ul><li><code>filename</code>：要查看开头内容的文件。</li></ul><p><strong>常用操作</strong>：</p><ul><li><p>显示指定行数的内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示文件的前 15 行，默认显示 10 行</span></span><br><span class="line"><span class="built_in">head</span> -n 15 filename</span><br></pre></td></tr></table></figure></li><li><p>显示文件的前几个字节：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示文件的前 50 个字节</span></span><br><span class="line"><span class="built_in">head</span> -c 50 filename</span><br></pre></td></tr></table></figure></li><li><p>显示多个文件的开头内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">head</span> file1 file2</span><br></pre></td></tr></table></figure></li><li><p>显示行号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">head</span> -v filename</span><br></pre></td></tr></table></figure></li></ul><h3 id="tail"><a href="#tail" class="headerlink" title="tail"></a><code>tail</code></h3><p><code>tail</code> 是一个用于查看文件末尾内容的命令。它在实时监视日志文件、查看最新添加的数据等场景中非常有用。</p><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> [options] filename</span><br></pre></td></tr></table></figure><ul><li><code>filename</code>：要查看末尾内容的文件。</li></ul><p><strong>常用操作</strong>：</p><ul><li><p>显示指定行数的内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 显示文件的后 20 行，默认显示 10 行</span></span><br><span class="line"><span class="built_in">tail</span> -n 20 filename</span><br></pre></td></tr></table></figure></li><li><p>实时监视文件末尾的新增内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f filename</span><br></pre></td></tr></table></figure></li><li><p>实时监视整个文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> -f -n +1 filename</span><br></pre></td></tr></table></figure></li><li><p>显示行号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">tail</span> -v filename</span><br></pre></td></tr></table></figure></li></ul><h1 id="文件搜索"><a href="#文件搜索" class="headerlink" title="文件搜索"></a>文件搜索</h1><h2 id="find：在文件系统中搜索文件"><a href="#find：在文件系统中搜索文件" class="headerlink" title="find：在文件系统中搜索文件"></a><code>find</code>：在文件系统中搜索文件</h2><p><code>find</code> 命令是用于在文件系统中查找文件和目录的强大工具。它可以根据不同的条件搜索文件，并执行相应的操作。</p><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find [path] [options] [expression]</span><br></pre></td></tr></table></figure><ul><li><p><code>path</code>：要开始搜索的路径，默认为当前工作目录。</p></li><li><p><code>expression</code>：指定要匹配的条件。</p></li></ul><p><strong>常用操作</strong>：</p><ul><li><p>按文件名进行搜索：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find /path/to/search -name <span class="string">&quot;filename&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>按文件类型进行搜索：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 -type 参数时，常用的选项有以下几种：</span></span><br><span class="line"><span class="comment"># 普通文件：f，目录：d，符号链接：l，块设备：b，字符设备：c，套接字文件：s，FIFO 文件（命名管道）：p</span></span><br><span class="line">find /path/to/search -<span class="built_in">type</span> f</span><br></pre></td></tr></table></figure></li><li><p>按文件大小进行搜索：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索文件大小大于 1MB 的文件</span></span><br><span class="line">find /path/to/search -size +1M</span><br></pre></td></tr></table></figure></li><li><p>按时间进行搜索：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 搜索最近 7 天内修改过的文件</span></span><br><span class="line">find /path/to/search -mtime -7</span><br></pre></td></tr></table></figure></li><li><p>搜索并执行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># command 表示要在找到的每个文件上执行的命令</span></span><br><span class="line">find /path/to/search -name <span class="string">&quot;filename&quot;</span> -<span class="built_in">exec</span> <span class="built_in">command</span> &#123;&#125; \;</span><br></pre></td></tr></table></figure></li><li><p>根据逻辑条件组合搜索：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 逻辑或：-o，搜索以 .txt 或 .log 结尾的文件</span></span><br><span class="line">find /path/to/search -name <span class="string">&quot;*.txt&quot;</span> -o -name <span class="string">&quot;*.log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 逻辑与：-a，搜索以 .txt 结尾并且大小大于 1MB 的文件</span></span><br><span class="line">find /path/to/search -name <span class="string">&quot;*.txt&quot;</span> -a -size +1M</span><br><span class="line"></span><br><span class="line"><span class="comment"># 逻辑非：！，搜索不以 .log 结尾的文件</span></span><br><span class="line">find /path/to/search ! -name <span class="string">&quot;*.log&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>限制搜索深度：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 表示递归搜索的子目录深度，2 表示仅搜索指定目录及其直接子目录，不会进一步递归</span></span><br><span class="line">find /path/to/search -maxdepth 2</span><br></pre></td></tr></table></figure></li></ul><h2 id="grep：在文件中搜索匹配的文本"><a href="#grep：在文件中搜索匹配的文本" class="headerlink" title="grep：在文件中搜索匹配的文本"></a><code>grep</code>：在文件中搜索匹配的文本</h2><p><code>grep</code> 是一个在文本文件中搜索指定模式的强大命令。它能够通过简单而灵活的正则表达式匹配，查找文件中包含指定模式的行。</p><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep [options] pattern [file...]</span><br></pre></td></tr></table></figure><ul><li><p><code>pattern</code>：要搜索的模式，可以是简单字符串或正则表达式。</p></li><li><p><code>file</code>：要搜索的文件，可以指定一个或多个文件。</p></li></ul><p><strong>常用操作</strong>：</p><ul><li><p>在文件中查找指定模式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&quot;pattern&quot;</span> file.txt</span><br></pre></td></tr></table></figure></li><li><p>递归搜索目录中的文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -r <span class="string">&quot;pattern&quot;</span> /path/to/search</span><br></pre></td></tr></table></figure></li><li><p>忽略大小写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -i <span class="string">&quot;pattern&quot;</span> file.txt</span><br></pre></td></tr></table></figure></li><li><p>显示匹配的行号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -n <span class="string">&quot;pattern&quot;</span> file.txt</span><br></pre></td></tr></table></figure></li><li><p>显示不匹配的行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -v <span class="string">&quot;pattern&quot;</span> file.txt</span><br></pre></td></tr></table></figure></li><li><p>只显示匹配的模式，而不是整行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -o <span class="string">&quot;pattern&quot;</span> file.txt</span><br></pre></td></tr></table></figure></li><li><p>显示匹配模式之前或之后的行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep -B 2 <span class="string">&quot;pattern&quot;</span> file.txt  <span class="comment"># 显示匹配行之前的 2 行</span></span><br><span class="line">grep -A 2 <span class="string">&quot;pattern&quot;</span> file.txt  <span class="comment"># 显示匹配行之后的 2 行</span></span><br></pre></td></tr></table></figure></li><li><p>显示匹配模式所在的文件名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -H <span class="string">&quot;pattern&quot;</span> /path/to/search/*</span><br></pre></td></tr></table></figure></li><li><p>显示匹配模式的计数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep -c <span class="string">&quot;pattern&quot;</span> file.txt</span><br></pre></td></tr></table></figure></li><li><p>启用扩展的正则表达式匹配模式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基本用法</span></span><br><span class="line">grep -E <span class="string">&quot;pattern&quot;</span> file.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 + 符号表示 b 的一个或多个重复</span></span><br><span class="line">grep -E <span class="string">&quot;ab+c&quot;</span> file.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用括号进行分组</span></span><br><span class="line">grep -E <span class="string">&quot;(pattern1|pattern2)&quot;</span> file.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用问号表示零个或一个重复，这里表示字符 u 可以出现零次或一次</span></span><br><span class="line">grep -E <span class="string">&quot;colou?r&quot;</span> file.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用大括号进行范围匹配，这里表示 a 重复 2 到 4 次</span></span><br><span class="line">grep -E <span class="string">&quot;a&#123;2,4&#125;&quot;</span> file.txt</span><br></pre></td></tr></table></figure></li></ul><h1 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h1><h2 id="uname：显示系统信息"><a href="#uname：显示系统信息" class="headerlink" title="uname：显示系统信息"></a><code>uname</code>：显示系统信息</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">uname</span> [options]</span><br></pre></td></tr></table></figure><p><strong>常用参数</strong>：</p><ul><li><p><code>-s</code>：显示内核名称。</p></li><li><p><code>-n</code>：显示网络节点主机名（hostname）。</p></li><li><p><code>-o</code>：显示操作系统名称。</p></li><li><p><code>-v</code>：显示操作系统版本。</p></li><li><p><code>-m</code>：显示硬件架构。</p></li><li><p><code>-p</code>：显示处理器类型。</p></li><li><p><code>-a</code>：显示全部信息，包括内核名称、网络节点主机名、操作系统名称、版本、硬件架构和处理器类型。</p></li></ul><h2 id="df：显示磁盘空间使用情况"><a href="#df：显示磁盘空间使用情况" class="headerlink" title="df：显示磁盘空间使用情况"></a><code>df</code>：显示磁盘空间使用情况</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> [options] [file...]</span><br></pre></td></tr></table></figure><p><strong>常用操作</strong>：</p><ul><li><p>显示所有挂载的文件系统的磁盘空间使用情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span></span><br></pre></td></tr></table></figure></li><li><p>以人类可读的格式显示磁盘空间：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure></li><li><p>显示特定文件或目录的磁盘空间使用情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> /path/to/directory</span><br></pre></td></tr></table></figure></li><li><p>显示所有文件系统，包括虚拟文件系统：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -a</span><br></pre></td></tr></table></figure></li><li><p>显示文件系统类型：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -T</span><br></pre></td></tr></table></figure></li><li><p>只显示本地文件系统：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -l</span><br></pre></td></tr></table></figure></li><li><p>显示每个文件系统的节点数：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -i</span><br></pre></td></tr></table></figure></li><li><p>只显示指定文件系统类型：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -t ext4</span><br></pre></td></tr></table></figure></li></ul><h2 id="du：显示目录空间使用情况"><a href="#du：显示目录空间使用情况" class="headerlink" title="du：显示目录空间使用情况"></a><code>du</code>：显示目录空间使用情况</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> [options] [directory...]</span><br></pre></td></tr></table></figure><p><strong>常用操作</strong>：</p><ul><li><p>显示指定目录的磁盘使用情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> /path/to/directory</span><br></pre></td></tr></table></figure></li><li><p>以人类可读的格式显示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -h</span><br></pre></td></tr></table></figure></li><li><p>显示每个子目录的磁盘使用情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># --max-depth 可以限制显示的深度，值为 1 时表示只显示指定目录下第一层子目录的磁盘使用情况</span></span><br><span class="line"><span class="built_in">du</span> -h --max-depth=1 /path/to/directory</span><br></pre></td></tr></table></figure></li><li><p>显示总和，而不显示每个子目录的详细信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -sh /path/to/directory</span><br></pre></td></tr></table></figure></li><li><p>仅显示文件和目录的总和：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -c /path/to/directory</span><br></pre></td></tr></table></figure></li><li><p>排序显示结果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -h --max-depth=1 /path/to/directory | <span class="built_in">sort</span> -h</span><br></pre></td></tr></table></figure></li><li><p>只显示大于指定大小的文件或目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span> -h --threshold=1M /path/to/directory</span><br></pre></td></tr></table></figure></li></ul><h1 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h1><h2 id="ps：显示当前运行的进程"><a href="#ps：显示当前运行的进程" class="headerlink" title="ps：显示当前运行的进程"></a><code>ps</code>：显示当前运行的进程</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps [options]</span><br></pre></td></tr></table></figure><p><strong>常用参数</strong>：</p><ul><li><p><code>aux</code>：显示所有终端中的进程信息。</p></li><li><p><code>-e</code>：显示所有用户的所有进程信息。</p></li><li><p><code>-f</code>：显示完整的进程信息，包括父进程、子进程等。</p></li><li><p><code>--forest</code>：以树状结构显示进程信息，显示进程之间的父子关系。</p></li><li><p><code>-u</code>：仅显示指定用户的进程。</p></li><li><p><code>-o</code>：指定要显示的列，指定多个列时用逗号分隔。可以指定的列有：</p><ul><li><p><code>pid</code>：进程标识符。</p></li><li><p><code>ppid</code>：父进程标识符。</p></li><li><p><code>pgid</code>：进程组标识符。</p></li><li><p><code>sid</code>：会话标识符。</p></li><li><p><code>tty</code>：与进程相关联的终端类型。</p></li><li><p><code>tname</code>：终端设备的名称。</p></li><li><p><code>comm</code>：进程的命令名称。</p></li><li><p><code>args</code>：进程的命令行参数。</p></li><li><p><code>etime</code>：进程运行的累计时间。</p></li><li><p><code>pcpu</code>：进程使用的 CPU 百分比。</p></li><li><p><code>pmem</code>：进程使用的物理内存百分比。</p></li><li><p><code>vsz</code>：进程的虚拟内存大小（以 KB 为单位）。</p></li><li><p><code>rss</code>：进程的实际使用物理内存大小（以 KB 为单位）。</p></li><li><p><code>user</code>：进程属于的用户。</p></li><li><p><code>uid</code>：进程属于的用户的 UID。</p></li><li><p><code>gid</code>：进程属于的组的 GID。</p></li><li><p><code>pid_namespace</code>：进程的 PID namespace 标识符。</p></li><li><p><code>cmd</code>：完整的命令行。</p></li></ul></li></ul><p><strong>实时刷新显示进程信息</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># watch 命令可以实时刷新显示进程信息</span></span><br><span class="line">watch ps aux</span><br></pre></td></tr></table></figure><h2 id="kill：终止进程"><a href="#kill：终止进程" class="headerlink" title="kill：终止进程"></a><code>kill</code>：终止进程</h2><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">kill</span> [options] &lt;pid&gt;</span><br></pre></td></tr></table></figure><ul><li><code>pid</code>：要终止的进程的进程标识符。</li></ul><p><strong>常见参数</strong>：</p><ul><li><p><code>-9</code>：发送强制终止信号（<code>SIGKILL</code>）给指定的进程，立即终止进程。</p></li><li><p><code>-q</code>：安静模式，不会产生任何输出。</p></li><li><p><code>-i</code>：进入交互式模式，询问是否终止指定的进程。</p></li><li><p><code>--</code>：终止整个进程组，而不仅仅是指定的进程。</p></li><li><p><code>-s</code>：指定要发送的信号类型。实际使用时，可以通过提供完整的信号类型、信号类型缩写（省略前面的SIG）、信号类型对应的数字编号（类似于 <code>-9</code> 参数，通过数字来指定信号类型时，可以省略 <code>-s</code> 参数。即 <code>kill -s 9 &lt;pid&gt;</code> 和 <code>kill -9 &lt;pid&gt;</code> 是等价的）三种方式来指定。可以指定的信号类型有：</p><ul><li><p><code>SIGHUP(1)</code>：挂起。通常用于通知进程重新读取配置文件。</p></li><li><p><code>SIGINT(2)</code>：中断。通常由用户在终端上按下 <code>Ctrl + c</code> 触发。</p></li><li><p><code>SIGQUIT(3)</code>：退出。类似于 <code>SIGINT</code>，但会生成 core dump 文件。</p></li><li><p><code>SIGILL(4)</code>：非法指令。表示进程执行了非法的 CPU 指令。</p></li><li><p><code>SIGABRT(6)</code>：中止。通常由 abort 函数调用触发，用于异常终止进程。</p></li><li><p><code>SIGFPE(8)</code>：浮点异常。表示进程执行了非法的浮点操作。</p></li><li><p><code>SIGKILL(9)</code>：强制终止。立即终止进程，不允许进程做清理操作。</p></li><li><p><code>SIGALRM(14)</code>：闹钟。用于通知进程已经过了指定的时间。</p></li><li><p><code>SIGTERM(15)</code>：终止。默认的终止信号，允许进程执行清理操作。</p></li><li><p><code>SIGUSR1(10)</code>：用户定义信号1。</p></li><li><p><code>SIGUSR2(12)</code>：用户定义信号2。</p></li><li><p><code>SIGCHLD(17)</code>：子进程状态改变。当子进程退出或停止时，父进程会收到该信号。</p></li><li><p><code>SIGCONT(18)</code>：继续。用于继续已经停止的进程。</p></li><li><p><code>SIGSTOP(19)</code>：停止。用于暂停进程的执行。</p></li><li><p><code>SIGTSTP(20)</code>：终端停止。类似于 <code>SIGSTOP</code>，但由终端上的 <code>Ctrl + z</code> 触发。</p></li><li><p><code>SIGTTIN(21)</code>：后台进程需要输入。</p></li><li><p><code>SIGTTOU(22)</code>：后台进程需要输出。</p></li><li><p><code>SIGPIPE(13)</code>：管道破裂。用于在写入已关闭的管道时通知进程。</p></li><li><p><code>SIGURG(23)</code>：紧急情况。表示 socket 上发生了紧急情况。</p></li><li><p><code>SIGXCPU(24)</code>：超时。表示进程使用的 CPU 时间超过了允许的限制。</p></li><li><p><code>SIGXFSZ(25)</code>：文件大小超过限制。表示进程创建的文件大小超过了系统限制。</p></li><li><p><code>SIGVTALRM(26)</code>：虚拟定时器超时。</p></li><li><p><code>SIGPROF(27)</code>：用于分析的定时器超时。</p></li><li><p><code>SIGWINCH(28)</code>：窗口大小改变。</p></li><li><p><code>SIGIO(29)</code>：异步 I&#x2F;O 事件。</p></li><li><p><code>SIGPWR(30)</code>：电源故障。表示电源状态发生变化。</p></li><li><p><code>SIGSYS(31)</code>：非法系统调用。</p></li></ul></li></ul><h2 id="top-htop：实时显示系统资源使用情况和运行中的进程"><a href="#top-htop：实时显示系统资源使用情况和运行中的进程" class="headerlink" title="top&#x2F;htop：实时显示系统资源使用情况和运行中的进程"></a><code>top</code>&#x2F;<code>htop</code>：实时显示系统资源使用情况和运行中的进程</h2><h3 id="top"><a href="#top" class="headerlink" title="top"></a><code>top</code></h3><p><code>top</code> 命令用于实时监视系统中运行的进程的资源使用情况。它提供了一个交互式的实时界面，显示了 CPU 使用情况、内存使用情况、进程列表以及其他系统信息。</p><p><strong>基本用法</strong>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top</span><br></pre></td></tr></table></figure><p><strong>常用操作</strong>：</p><ul><li><p>指定刷新频率：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 -d 选项可以指定 top 的刷新频率，单位是秒。例如，top -d 5 将每隔 5 秒刷新一次</span></span><br><span class="line">top -d seconds</span><br></pre></td></tr></table></figure></li><li><p>按某个字段排序：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 按照 CPU 使用率排序</span></span><br><span class="line">top -o %CPU</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按照内存使用率排序</span></span><br><span class="line">top -o %MEM</span><br></pre></td></tr></table></figure></li><li><p>显示特定用户的进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -u username</span><br></pre></td></tr></table></figure></li><li><p>显示累积的 CUP 使用情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -i</span><br></pre></td></tr></table></figure></li><li><p>显示完整命令行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -c</span><br></pre></td></tr></table></figure></li><li><p>显示所有用户的进程：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top -U</span><br></pre></td></tr></table></figure></li><li><p>显示关键信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -b 选项以批处理模式运行，-n 选项指定运行的次数。这将在一次性运行中显示一次系统信息</span></span><br><span class="line">top -b -n 1</span><br></pre></td></tr></table></figure></li></ul><h3 id="htop"><a href="#htop" class="headerlink" title="htop"></a><code>htop</code></h3><h1 id="用户管理"><a href="#用户管理" class="headerlink" title="用户管理"></a>用户管理</h1><h2 id="who：显示当前登录用户"><a href="#who：显示当前登录用户" class="headerlink" title="who：显示当前登录用户"></a><code>who</code>：显示当前登录用户</h2><h2 id="whoami：显示当前用户名"><a href="#whoami：显示当前用户名" class="headerlink" title="whoami：显示当前用户名"></a><code>whoami</code>：显示当前用户名</h2><h2 id="useradd-userdel：添加-删除用户"><a href="#useradd-userdel：添加-删除用户" class="headerlink" title="useradd&#x2F;userdel：添加&#x2F;删除用户"></a><code>useradd</code>&#x2F;<code>userdel</code>：添加&#x2F;删除用户</h2><h2 id="passwd：更改用户密码"><a href="#passwd：更改用户密码" class="headerlink" title="passwd：更改用户密码"></a><code>passwd</code>：更改用户密码</h2><h1 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h1><h2 id="chmod：修改文件或目录权限"><a href="#chmod：修改文件或目录权限" class="headerlink" title="chmod：修改文件或目录权限"></a><code>chmod</code>：修改文件或目录权限</h2><h2 id="chown：修改文件或目录的所有者"><a href="#chown：修改文件或目录的所有者" class="headerlink" title="chown：修改文件或目录的所有者"></a><code>chown</code>：修改文件或目录的所有者</h2><h2 id="chgrp：修改文件或目录的所属组"><a href="#chgrp：修改文件或目录的所属组" class="headerlink" title="chgrp：修改文件或目录的所属组"></a><code>chgrp</code>：修改文件或目录的所属组</h2><h1 id="压缩和解压缩"><a href="#压缩和解压缩" class="headerlink" title="压缩和解压缩"></a>压缩和解压缩</h1><h2 id="tar：打包和解包文件"><a href="#tar：打包和解包文件" class="headerlink" title="tar：打包和解包文件"></a><code>tar</code>：打包和解包文件</h2><h2 id="gzip-gunzip、bzip2-bunzip2：压缩和解压缩文件"><a href="#gzip-gunzip、bzip2-bunzip2：压缩和解压缩文件" class="headerlink" title="gzip&#x2F;gunzip、bzip2&#x2F;bunzip2：压缩和解压缩文件"></a><code>gzip</code>&#x2F;<code>gunzip</code>、<code>bzip2</code>&#x2F;<code>bunzip2</code>：压缩和解压缩文件</h2><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><h2 id="ping：测试与另一台主机的连接"><a href="#ping：测试与另一台主机的连接" class="headerlink" title="ping：测试与另一台主机的连接"></a><code>ping</code>：测试与另一台主机的连接</h2><h2 id="ifconfig-ip：显示和配置网络接口"><a href="#ifconfig-ip：显示和配置网络接口" class="headerlink" title="ifconfig&#x2F;ip：显示和配置网络接口"></a><code>ifconfig</code>&#x2F;<code>ip</code>：显示和配置网络接口</h2><h2 id="netstat：显示网络状态信息"><a href="#netstat：显示网络状态信息" class="headerlink" title="netstat：显示网络状态信息"></a><code>netstat</code>：显示网络状态信息</h2><h1 id="安装和管理软件"><a href="#安装和管理软件" class="headerlink" title="安装和管理软件"></a>安装和管理软件</h1><h2 id="apt-yum：包管理器，用于安装、更新和删除软件包"><a href="#apt-yum：包管理器，用于安装、更新和删除软件包" class="headerlink" title="apt&#x2F;yum：包管理器，用于安装、更新和删除软件包"></a><code>apt</code>&#x2F;<code>yum</code>：包管理器，用于安装、更新和删除软件包</h2><h2 id="dpkg：Debian-系发行版的软件包管理工具"><a href="#dpkg：Debian-系发行版的软件包管理工具" class="headerlink" title="dpkg：Debian 系发行版的软件包管理工具"></a><code>dpkg</code>：Debian 系发行版的软件包管理工具</h2><h2 id="rpm：Red-Hat-系发行版的软件包管理工具"><a href="#rpm：Red-Hat-系发行版的软件包管理工具" class="headerlink" title="rpm：Red Hat 系发行版的软件包管理工具"></a><code>rpm</code>：Red Hat 系发行版的软件包管理工具</h2><h1 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h1>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 操作系统 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
